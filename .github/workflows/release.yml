name: release

on:
  workflow_run:
    workflows: ["build-and-test"]
    branches: [canary, stable]
    types:
      - completed

permissions:
  contents: write

jobs:
  create-release-dashboard:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v2
        ref: ${{ github.event.workflow_run.head_branch }}
      - name: Creates build
        working-directory: ./dashboard
        run: make release
      - name: Upload release artifact
        uses: actions/upload-artifact@v2
        with:
          name: dashboard-release-artifact
          retention-days: 1
          path: ./dashboard/target/sid2-dashboard.tar.gz
  create-release-keycloak-spi:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v2
        ref: ${{ github.event.workflow_run.head_branch }}
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ./keycloak-radius-spi/maven-local-repo
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build and test
        working-directory: ./keycloak-radius-spi
        run: make build
      - name: Upload release artifact
        uses: actions/upload-artifact@v2
        with:
          name: spi-release-artifact
          retention-days: 1
          path: ./keycloak-radius-spi/target/keycloak-radius-spi-jar-with-dependencies.jar
  make-logical-release:
    runs-on: ubuntu-latest
    needs: [create-release-keycloak-spi, create-release-dashboard]
    name: Making release
    steps:
      - uses: actions/checkout@v2
        ref: ${{ github.event.workflow_run.head_branch }}
        with:
          fetch-depth: 0
      - name: Read .node_version
        run: echo ::set-output name=NODE_VERSION::$(cat .node-version)
        id: get_node_version
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get_node_version.outputs.NODE_VERSION }}
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - run: |
          mkdir -p ./target
          npm install
      - uses: actions/download-artifact@v2
        with:
          path: ./target
      - run: npm run release -- --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
